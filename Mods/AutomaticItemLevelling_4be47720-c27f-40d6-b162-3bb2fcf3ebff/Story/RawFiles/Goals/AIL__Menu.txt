Version 1
SubGoalCombiner SGC_AND
INITSECTION

DB_AIL_Rarity("AIL_Unique", "Unique");
DB_AIL_Rarity("AIL_Divine", "Divine");
DB_AIL_Rarity("AIL_Legendary", "Legendary");
DB_AIL_Rarity("AIL_Epic", "Epic");
DB_AIL_Rarity("AIL_Rare", "Rare");
DB_AIL_Rarity("AIL_Uncommon", "Uncommon");
DB_AIL_Rarity("AIL_Common", "Common");

GlobalSetFlag("AIL_Unique");
GlobalSetFlag("AIL_Divine");
GlobalSetFlag("AIL_Legendary");
GlobalSetFlag("AIL_Epic");
GlobalSetFlag("AIL_Rare");
GlobalSetFlag("AIL_Uncommon");
GlobalSetFlag("AIL_Common");
GlobalSetFlag("AIL_RarityDownscale");

KBSECTION

// Have all levelable items be recorded so that, if a rarity tier's scaling is disabled, items can be reset to their original level
// Also add in the flag requested to disable rarity de-scaling for compatibility reasons

/* [OSITOOLS_ONLY]
IF
GameStarted(_Region, _)
AND
IsGameLevel(_Region, 1)
AND
GlobalGetFlag("AIL_RarityInitBodge", 0)
THEN
GlobalSetFlag("AIL_RarityInitBodge");
GlobalSetFlag("AIL_RarityDownscale");
AIL_InitInvRarity();

PROC
AIL_InitInvRarity()
AND
DB_IsPlayer(_Char)
THEN
InventoryLaunchIterator(_Char, "AIL_InitInvRarity", "");

IF
StoryEvent((ITEMGUID)_Item, "AIL_InitInvRarity")
AND
ItemIsEquipable(_Item, 1)
AND
NRD_ItemGetInt(_Item, "Level", _ItemLevel)
THEN
DB_AIL_ItemList(_Item, _ItemLevel);

IF
ItemAddedToCharacter((ITEMGUID)_Item, (CHARACTERGUID)_Char)
AND
DB_IsPlayer(_Char)
AND
ItemIsEquipable(_Item, 1)
AND
NRD_ItemGetInt(_Item, "Level", _ItemLevel)
THEN
DB_AIL_ItemList(_Item, _ItemLevel);
*/

// Register to LeaderLib if extender installed

/* [OSITOOLS_ONLY]
PROC
LeaderLib_Mods_OnVersionChanged(4be47720-c27f-40d6-b162-3bb2fcf3ebff, (INTEGER)_LastVersion, (INTEGER)_NextVersion)
AND
NOT DB_LeaderLib_ModMenu_RegisteredMenuData("4be47720-c27f-40d6-b162-3bb2fcf3ebff", (STRING)_, "AIL_Dialog", (STRING)_, (STRING)_)
THEN
DB_LeaderLib_ModApi_RegisterMenu("4be47720-c27f-40d6-b162-3bb2fcf3ebff", "AIL_Dialog", "[Automatic Item Levelling] Settings");
*/

// Add book if extender installed

/* [OSITOOLS_ONLY]
IF
GameStarted(_Region, _)
AND
IsGameLevel(_Region, 1)
AND
DB_IsPlayer(_Char)
AND
ObjectGetFlag(_Char, "AIL_HasReceivedBook", 0)
THEN
ItemTemplateAddTo("BOOK_AIL_ArmamentsOfTheGods_e5907cf1-cfa5-4f3c-bc41-25377f074d32", _Char, 1);
ObjectSetFlag(_Char, "AIL_HasReceivedBook");

IF
CharacterJoinedParty(_Char)
AND
DB_IsPlayer(_Char)
AND
ObjectGetFlag(_Char, "AIL_HasReceivedBook", 0)
THEN
ItemTemplateAddTo("BOOK_AIL_ArmamentsOfTheGods_e5907cf1-cfa5-4f3c-bc41-25377f074d32", _Char, 1);
ObjectSetFlag(_Char, "AIL_HasReceivedBook");
*/

// Using book

IF
CharacterUsedItem(_Char, _Item)
AND
DB_IsPlayer(_Char)
AND
GetTemplate(_Item, "BOOK_AIL_ArmamentsOfTheGods_e5907cf1-cfa5-4f3c-bc41-25377f074d32")
AND
QRY_SpeakerIsAvailable(_Char)
THEN
Proc_StartDialog(0, "AIL_Dialog", _Char);

// Changing database for item rarity

IF
GlobalFlagCleared(_FlagName)
AND
DB_AIL_Rarity(_FlagName, _ItemType)
AND
DB_AIL_RarityActive(_ItemType)
THEN
NOT DB_AIL_RarityActive(_ItemType);

IF
GlobalFlagSet(_FlagName)
AND
DB_AIL_Rarity(_FlagName, _ItemType)
AND
NOT DB_AIL_RarityActive(_ItemType)
THEN
DB_AIL_RarityActive(_ItemType);

IF
GlobalFlagSet("AIL_Dialog_Level")
AND
DB_IsPlayer(_Char)
THEN
GlobalClearFlag("AIL_Dialog_Level");
InventoryLaunchIterator(_Char, "AIL_InventoryLevelUp", "");

EXITSECTION

ENDEXITSECTION
ParentTargetEdge "__Start"
